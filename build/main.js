webpackJsonp([0],{0:function(t,e,o){"use strict";o(1)},1:function(t,e,o){"use strict";o(2);var n=o(6),r=o(8),i=o(28);r.enableProdMode(),n.platformBrowserDynamic().bootstrapModule(i.AppModule)},2:631,28:function(t,e,o){"use strict";var n=this&&this.__decorate||function(t,e,o,n){var r,i=arguments.length,d=i<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)d=Reflect.decorate(t,e,o,n);else for(var c=t.length-1;c>=0;c--)(r=t[c])&&(d=(i<3?r(d):i>3?r(e,o,d):r(e,o))||d);return i>3&&d&&Object.defineProperty(e,o,d),d},r=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},i=o(8),d=o(27),c=o(26),a=o(29),p=o(33),s=o(63),f=o(82),u=o(85),l=o(90),m=o(87),h=o(92),y=function(){function AppModule(){}return AppModule=n([i.NgModule({imports:[c.BrowserModule,a.FormsModule,s.MaterialModule.forRoot(),p.RouterModule.forRoot(h.routes)],declarations:[m.TodoItemComponent,l.PromptUserComponent,u.TodoListComponent,f.AppComponent],entryComponents:[m.TodoItemComponent],providers:[{provide:d.LocationStrategy,useClass:d.HashLocationStrategy}],bootstrap:[f.AppComponent]}),r("design:paramtypes",[])],AppModule)}();e.AppModule=y},82:function(t,e,o){"use strict";var n=this&&this.__decorate||function(t,e,o,n){var r,i=arguments.length,d=i<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)d=Reflect.decorate(t,e,o,n);else for(var c=t.length-1;c>=0;c--)(r=t[c])&&(d=(i<3?r(d):i>3?r(e,o,d):r(e,o))||d);return i>3&&d&&Object.defineProperty(e,o,d),d},r=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},i=o(8),d=function(){function AppComponent(){this.title="TODO App",this.subtitle="Create your TODO",this.description="This project is created for Angular 2 with Material & Firebase workshop purpose"}return AppComponent=n([i.Component({selector:"app",template:o(83),styles:[o(84)]}),r("design:paramtypes",[])],AppComponent)}();e.AppComponent=d},83:function(t,e){t.exports='<md-card class="app-content">\n    <md-card-title>{{title}}</md-card-title>\n    <md-card-subtitle>{{subtitle}}</md-card-subtitle>\n    <md-card-content>\n        <p>{{description}}</p>\n        <router-outlet></router-outlet>\n    </md-card-content>\n</md-card>'},84:function(t,e){t.exports=".app-content {\n    margin: 20px;\n}"},85:function(t,e,o){"use strict";var n=this&&this.__decorate||function(t,e,o,n){var r,i=arguments.length,d=i<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)d=Reflect.decorate(t,e,o,n);else for(var c=t.length-1;c>=0;c--)(r=t[c])&&(d=(i<3?r(d):i>3?r(e,o,d):r(e,o))||d);return i>3&&d&&Object.defineProperty(e,o,d),d},r=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)};o(86);var i=o(8),d=o(33),c=o(63),a=o(87),p=function(){function TodoListComponent(t,e,o){this.route=t,this.dialog=e,this.snackBar=o,this.todoItems=[{id:"1",title:"Todo 1",description:"Todo 1 desc",isDone:!1},{id:"2",title:"Todo 2",description:"Todo 2 desc",isDone:!0},{id:"3",title:"Todo 3",description:"Todo 3 desc",isDone:!1}]}return TodoListComponent.prototype.ngOnInit=function(){this.route.params.forEach(function(t){console.log(t.userId)})},TodoListComponent.prototype.onTodoItemStateChange=function(t,e){t.isDone=e.checked},TodoListComponent.prototype.addTodoItem=function(){var t=this;this.dialogRef=this.dialog.open(a.TodoItemComponent),this.dialogRef.afterClosed().subscribe(function(e){e&&(t.todoItems.push(e),t.snackBar.open("New todo item created.","CLOSE")),t.dialogRef=null})},TodoListComponent=n([i.Component({selector:"todo-list",template:o(89),styles:[o(86)]}),r("design:paramtypes",["function"==typeof(t="undefined"!=typeof d.ActivatedRoute&&d.ActivatedRoute)&&t||Object,"function"==typeof(e="undefined"!=typeof c.MdDialog&&c.MdDialog)&&e||Object,"function"==typeof(p="undefined"!=typeof c.MdSnackBar&&c.MdSnackBar)&&p||Object])],TodoListComponent);var t,e,p}();e.TodoListComponent=p},86:function(t,e){t.exports=".todo-done {\n    text-decoration: line-through;\n}\n\n.add-todo {\n    display: inline-block;\n    position: fixed;\n    bottom: 20px;\n    right: 20px;\n}"},87:function(t,e,o){"use strict";var n=this&&this.__decorate||function(t,e,o,n){var r,i=arguments.length,d=i<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)d=Reflect.decorate(t,e,o,n);else for(var c=t.length-1;c>=0;c--)(r=t[c])&&(d=(i<3?r(d):i>3?r(e,o,d):r(e,o))||d);return i>3&&d&&Object.defineProperty(e,o,d),d},r=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},i=o(8),d=o(33),c=o(63),a=function(){function TodoItemComponent(t,e,o){this.router=t,this.snackBar=e,this.dialogRef=o,this.todoItem={id:"",title:"",description:"",isDone:!1}}return TodoItemComponent.prototype.createTodoItem=function(){this.dialogRef.close(this.todoItem)},TodoItemComponent=n([i.Component({selector:"todo-item",template:o(88)}),r("design:paramtypes",["function"==typeof(t="undefined"!=typeof d.Router&&d.Router)&&t||Object,"function"==typeof(e="undefined"!=typeof c.MdSnackBar&&c.MdSnackBar)&&e||Object,"function"==typeof(a="undefined"!=typeof c.MdDialogRef&&c.MdDialogRef)&&a||Object])],TodoItemComponent);var t,e,a}();e.TodoItemComponent=a},88:function(t,e){t.exports='<md-card>\n    <md-toolbar color="primary">Add TODO</md-toolbar>\n    <br>\n    <md-card-content>\n        <md-input placeholder="Enter title" [(ngModel)]="todoItem.title"></md-input>\n        <p>\n            <md-textarea placeholder="Enter description" [(ngModel)]="todoItem.description"></md-textarea>\n        </p>\n        <button md-raised-button color="primary" [disabled]="!todoItem.title" (click)="createTodoItem()">CREATE TODO</button>\n    </md-card-content>\n</md-card>'},89:function(t,e){t.exports='<md-card>\n    <md-card-title>Todo List</md-card-title>\n    <md-card-content>\n        <md-list>\n            <md-list-item *ngFor="let todoItem of todoItems">\n                <md-checkbox [checked]="todoItem.isDone" (change)="onTodoItemStateChange(todoItem, $event)" [class.todo-done]="todoItem.isDone" md-tooltip="{{todoItem.description}}" tooltip-position="after">\n                    {{todoItem.title}}\n                </md-checkbox>\n            </md-list-item>\n        </md-list>\n        <span class="add-todo">\n          <button md-fab (click)="addTodoItem()"><md-icon>+</md-icon></button>\n        </span>\n    </md-card-content>\n</md-card>'},90:function(t,e,o){"use strict";var n=this&&this.__decorate||function(t,e,o,n){var r,i=arguments.length,d=i<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)d=Reflect.decorate(t,e,o,n);else for(var c=t.length-1;c>=0;c--)(r=t[c])&&(d=(i<3?r(d):i>3?r(e,o,d):r(e,o))||d);return i>3&&d&&Object.defineProperty(e,o,d),d},r=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},i=o(8),d=o(33),c=o(63),a=function(){function PromptUserComponent(t,e){this.router=t,this.snackBar=e,this.user={id:"",name:""}}return PromptUserComponent.prototype.createUser=function(){this.user.id=this.user.name.replace(/\s/g,"-").toLowerCase(),this.router.navigate(["/",this.user.id])},PromptUserComponent=n([i.Component({selector:"todo-list",template:o(91)}),r("design:paramtypes",["function"==typeof(t="undefined"!=typeof d.Router&&d.Router)&&t||Object,"function"==typeof(e="undefined"!=typeof c.MdSnackBar&&c.MdSnackBar)&&e||Object])],PromptUserComponent);var t,e}();e.PromptUserComponent=a},91:function(t,e){t.exports='<md-card>\n    <md-input placeholder="Enter your name" [(ngModel)]="user.name"></md-input>\n    <button md-raised-button color="primary" [disabled]="!user.name" (click)="createUser()">CREATE TODO</button>\n</md-card>'},92:function(t,e,o){"use strict";var n=o(85),r=o(90);e.routes=[{path:":userId",component:n.TodoListComponent},{path:"**",component:r.PromptUserComponent}]}});
//# sourceMappingURL=main.js.map